<처리할 목록>

1. 닉네임 처리하는 부분 일단 stomp connect header param 넘기는거 일단 보류하고 connect 이후에 설정하도록 처리
- header 에 spring message.support.genericmessage 를 처리하는 방법을 아직 모르겠음. payload 도 뭔지... 
2. 귓말 보내기 , 브라우저 알림 기능 추가하기. 
3. 접속 다시시도 버튼 넣기. 
4. 모드 중에 에러 나는 게 몇개 있음...  확인해보기.  
5. 소스코드에 있는 주석 전부 영어로 바꾸기. 
6. 방목록 

<아이디어>

1. 디비 연결해서 디비 insert 하는 부분 만들기 . nickname , message, code, 
2. 처음 화면 진입했을때 도움말 화면 구현 toolip?
3. 닉네임 중복 체크기능 추가
4. h2 로 된 게시판 만들어서 버그 리포트 받고, 공지 뛰우기. 
5. window.onerror 사용해서 스크립트 에러 전송받기. 
6. 새로운 사용자 들어왔을때 알림... 
7. 구글, face book 연동만 해놓기.  
8. mybatis 사용하여 h2 디비에 지난 대화내용 저장하고 불러 올수 있도록 처리. 지난 대화를 보려면 로그인이 필요함.

<컴파일 기능 구현>

1. spring boot file upload 와 소스파일 작성하는 과정이 비슷함. 소스파일 생성 구현.(file write)
2. 다른 방법으로는 string 만 전달 받아서 home directory 에 source 만들었다가, 컴파일, 실행 결과 받은다음에 
해당 파일들 삭제 하는 방법도 있을것 같음. source 만들때 id(구글 로그인) 별로 폴더 만들고 해야함.
로그인 안되있으면 컴파일 기능 사용불가능함.  

<spring 소스 분석>

1. @MessageMapping(String url)  >> 메세지 받을 주소를 설정함. return 하는 주소도 똑같이 설정됨.
바로 아래 @SendTo(String url) 으로 return 주소를 다르게 설정할 수 있음. 
2. config.enableSimpleBroker("/topic"); server 가 message 를 /topic 으로 시작하는 주소로 보냄.
3. config.setApplicationDestinationPrefixes("/app"); client 가 message 를 /app 으로 시작하는 주소로 보냄.
            	



